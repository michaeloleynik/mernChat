[{"C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\index.js":"1","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\App.js":"2","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\redux\\store.js":"3","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\routes.js":"4","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\redux\\reducer.js":"5","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\hooks\\useAuth.js":"6","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\Footer\\Footer.js":"7","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\NavBar\\NavBar.js":"8","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\SignUp\\SignUp.js":"9","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\Recover\\Recover.js":"10","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\SignIn\\SignIn.js":"11","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\redux\\reducers\\themeReducer.js":"12","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\redux\\reducers\\authReducer.js":"13","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\hooks\\useHttp.js":"14","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\containers\\Chat\\Chat.js":"15","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\containers\\SideBar\\SideBar.js":"16","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\UserList\\UserList.js":"17","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\SwitchTheme\\SwitchTheme.js":"18","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\Status\\Status.js":"19","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\containers\\Dialog\\Dialog.js":"20","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\Toast\\Toast.js":"21","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\Message\\Message.js":"22","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\containers\\Messages\\Messages.js":"23","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\Settings\\Settings.js":"24","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\CreateDiolog\\CreateDialog.js":"25","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\Loader\\Loader.js":"26","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\redux\\reducers\\dialogReducer.js":"27","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\DropZoneDialog\\DropZoneDialog.js":"28"},{"size":315,"mtime":1619377724765,"results":"29","hashOfConfig":"30"},{"size":2588,"mtime":1619452484646,"results":"31","hashOfConfig":"30"},{"size":218,"mtime":1609946816556,"results":"32","hashOfConfig":"30"},{"size":1585,"mtime":1618047928060,"results":"33","hashOfConfig":"30"},{"size":338,"mtime":1617989828870,"results":"34","hashOfConfig":"30"},{"size":1467,"mtime":1624550214997,"results":"35","hashOfConfig":"30"},{"size":578,"mtime":1613508760351,"results":"36","hashOfConfig":"30"},{"size":8609,"mtime":1613061507883,"results":"37","hashOfConfig":"30"},{"size":5068,"mtime":1616499346481,"results":"38","hashOfConfig":"30"},{"size":2867,"mtime":1613507974489,"results":"39","hashOfConfig":"30"},{"size":5214,"mtime":1624875486023,"results":"40","hashOfConfig":"30"},{"size":515,"mtime":1621438814796,"results":"41","hashOfConfig":"30"},{"size":814,"mtime":1616501770738,"results":"42","hashOfConfig":"30"},{"size":938,"mtime":1623673489254,"results":"43","hashOfConfig":"30"},{"size":1259,"mtime":1625232997513,"results":"44","hashOfConfig":"30"},{"size":7861,"mtime":1624901979785,"results":"45","hashOfConfig":"30"},{"size":9396,"mtime":1624900779162,"results":"46","hashOfConfig":"30"},{"size":1249,"mtime":1613497642856,"results":"47","hashOfConfig":"30"},{"size":1679,"mtime":1624615484247,"results":"48","hashOfConfig":"30"},{"size":7008,"mtime":1624892261543,"results":"49","hashOfConfig":"30"},{"size":1494,"mtime":1619525845097,"results":"50","hashOfConfig":"30"},{"size":2451,"mtime":1625232452075,"results":"51","hashOfConfig":"30"},{"size":5150,"mtime":1625260508259,"results":"52","hashOfConfig":"30"},{"size":6562,"mtime":1617102216211,"results":"53","hashOfConfig":"30"},{"size":4208,"mtime":1619801206685,"results":"54","hashOfConfig":"30"},{"size":416,"mtime":1617206052675,"results":"55","hashOfConfig":"30"},{"size":716,"mtime":1623617724817,"results":"56","hashOfConfig":"30"},{"size":486,"mtime":1623593495659,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"k98t3u",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"120"},"C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\index.js",[],["121","122"],"C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\App.js",[],"C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\redux\\store.js",[],"C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\routes.js",[],"C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\redux\\reducer.js",[],"C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\hooks\\useAuth.js",[],"C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\NavBar\\NavBar.js",["123","124","125"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useAuth } from '../../hooks/useAuth';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nconst dark = state => state.theme.dark;\r\nconst auth = state => state.auth.isAuth;\r\nconst userName = state => state.auth.userName;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n    color: theme.palette.defaultColor.main\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: theme.palette.defaultColor.main\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n\r\n  iconColor: {\r\n    color: theme.palette.defaultColor.main\r\n  },\r\n  iconColorReverse: {\r\n    color: theme.palette.defaultColorReverse.main\r\n  },\r\n  avatarColor : {\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  small: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const NavBar = () => {\r\n  const classes = useStyles();\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = useState(null);\r\n\r\n  const whatTheme = useSelector(dark);\r\n  const isAuth = useSelector(auth);\r\n  const avatarContent = useSelector(userName);\r\n  const dispatch = useDispatch();\r\n  const { logout } = useAuth();  \r\n\r\n  // const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleThemeChange = () => {\r\n    dispatch({type: 'theme/switch-theme'});\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    logout();\r\n  }\r\n\r\n  const menuId = 'primary-search-account-menu';\r\n  // const renderMenu = (\r\n  //   <Menu\r\n  //     anchorEl={anchorEl}\r\n  //     anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n  //     id={menuId}\r\n  //     keepMounted\r\n  //     transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n  //     open={isMenuOpen}\r\n  //     onClose={handleMenuClose}\r\n  //   >\r\n      \r\n  //     <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n  //   </Menu>\r\n  // );\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem onClick={handleThemeChange}>\r\n        {whatTheme ?\r\n          <IconButton >\r\n          <Brightness7Icon className={classes.iconColorReverse} />\r\n          </IconButton> : \r\n\r\n          <IconButton>\r\n            <Brightness4Icon className={classes.iconColorReverse} />\r\n          </IconButton>\r\n        }\r\n\r\n        <p>Switch Theme</p>\r\n      </MenuItem>\r\n\r\n      {\r\n        isAuth &&\r\n\r\n        <MenuItem onClick={handleProfileMenuOpen}>\r\n          <IconButton\r\n            aria-label=\"switch theme\"\r\n            aria-controls=\"primary-switch-theme\"\r\n            color=\"inherit\"\r\n          >\r\n            <Avatar className={`${classes.small} ${classes.iconColor}`}>{avatarContent && avatarContent.slice(0, 1).toUpperCase()}</Avatar>\r\n          </IconButton>\r\n\r\n          <p>Profile</p>\r\n        </MenuItem>\r\n      }\r\n      \r\n      {\r\n        isAuth &&\r\n\r\n        <MenuItem onClick={logoutHandler}>\r\n          <IconButton\r\n            aria-label=\"logout\"\r\n            aria-controls=\"primary-logout\"\r\n            color=\"inherit\"\r\n          >\r\n            <ExitToAppIcon />\r\n          </IconButton>\r\n\r\n          <p>Logout</p>\r\n        </MenuItem>\r\n      }\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            MERN Chat\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon className={classes.iconColor} />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            {whatTheme ?\r\n              <IconButton onClick={handleThemeChange}>\r\n              <Brightness7Icon className={classes.iconColor} />\r\n              </IconButton> : \r\n\r\n              <IconButton onClick={handleThemeChange}>\r\n                <Brightness4Icon className={classes.iconColor} />\r\n              </IconButton>\r\n            }\r\n\r\n            {\r\n              isAuth &&\r\n              <IconButton\r\n                \r\n                aria-label=\"account of current user\"\r\n                aria-controls={menuId}\r\n                aria-haspopup=\"true\"\r\n                onClick={handleProfileMenuOpen}\r\n                color=\"inherit\"\r\n              >\r\n                <Link to=\"/profile\">\r\n                <Avatar className={`${classes.small} ${classes.avatarColor}`}>{avatarContent && avatarContent.slice(0, 1).toUpperCase()}</Avatar>\r\n                </Link>\r\n              </IconButton>\r\n            }\r\n\r\n            {\r\n              isAuth &&\r\n              <IconButton\r\n                aria-label=\"logout\"\r\n                aria-controls=\"primary-logout\"\r\n                color=\"inherit\"\r\n                onClick={logoutHandler}\r\n              >\r\n                <ExitToAppIcon className={classes.iconColor} />\r\n              </IconButton>\r\n            }\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon className={classes.iconColor} />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {/* {renderMenu} */}\r\n    </div>\r\n  );\r\n}",["126","127"],"C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\SignUp\\SignUp.js",[],"C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\Recover\\Recover.js",[],"C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\SignIn\\SignIn.js",[],"C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\redux\\reducers\\themeReducer.js",[],"C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\redux\\reducers\\authReducer.js",[],"C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\hooks\\useHttp.js",[],"C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\containers\\Chat\\Chat.js",[],"C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\containers\\SideBar\\SideBar.js",[],"C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\UserList\\UserList.js",["128","129"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { format, isToday, parseISO } from 'date-fns';\r\nimport orderBy from \"lodash/orderBy\";\r\n\r\nimport {io} from 'socket.io-client';\r\n\r\nimport AES from 'crypto-js/aes';\r\nimport enc_utf8 from 'crypto-js/enc-utf8';\r\n\r\nimport { makeStyles, fade, withStyles } from '@material-ui/core/styles';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nimport sadDarkSvg from '../../assets/images/sadDark.svg';\r\nimport sadLightSvg from '../../assets/images/sadLight.svg';\r\nimport { Loader } from '../Loader/Loader';\r\n\r\nconst socket = io();\r\n\r\nconst StyledBadge = withStyles((theme) => ({\r\n  badge: {\r\n    backgroundColor: '#44b700',\r\n    color: '#44b700',\r\n  }\r\n}))(Badge);\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainDiv: {\r\n    height: 'calc(100vh - 215px)',\r\n    [theme.breakpoints.down('md')]: {\r\n      height: 'calc(100% - 145px)'\r\n    }\r\n  },\r\n\r\n  div: {\r\n    width: '285px',\r\n    \r\n    padding: '10px'\r\n  },\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: '36ch',\r\n    height: 'calc(100% - 70px)',\r\n    [theme.breakpoints.down('md')]: {\r\n      height: '100%',\r\n      paddingBottom: 0\r\n    },\r\n    overflowY: 'auto',\r\n    paddingTop: 0,\r\n    \r\n\r\n    '&::-webkit-scrollbar': {\r\n      width: '0.25rem'\r\n    },\r\n\r\n    '&::-webkit-scrollbar-track': {\r\n      backgroundColor: theme.palette.paperColor.main\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb': {\r\n      backgroundColor: theme.palette.secondary.main\r\n    }\r\n  },\r\n\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.defaultColorReverse.main, 0.15),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n  },\r\n  searchInput: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n  },\r\n  seacrhIcon: {\r\n    height: '100%',\r\n    position: 'absolute',\r\n    top: 0,\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    [theme.breakpoints.down('sm')]: {\r\n      padding: '0 12px'\r\n    }\r\n  },\r\n  loader: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    minHeight: 'calc(100vh - 300px)'\r\n  },\r\n  listItem: {\r\n    backgroundColor: theme.palette.paperColor.main,\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.defaultColor.main, 0.4)\r\n    }\r\n  },\r\n\r\n  'listItem--selected': {\r\n    backgroundColor: fade(theme.palette.defaultColor.main, 0.4)\r\n  },\r\n  badgeOnlineColor: {\r\n    color: \"#00c853\"\r\n  }\r\n}));\r\n\r\nexport const UserList = ({dialogs, whatTheme, loading, myId, selectedDialogId}) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [filtredDialogs, setFiltredDialogs] = useState([]);\r\n  // console.log(selectedDialogId);\r\n\r\n  // useEffect(() => {\r\n  //   let newDialogsArr = [];\r\n  //   dialogs.forEach(d => {\r\n  //     newDialogsArr[dialogs.indexOf(d)] = {\r\n  //       ...d,\r\n  //       lastMessage: {\r\n  //         ...d.lastMessage,\r\n  //         text: AES.decrypt(d.lastMessage.text, d.secretKey).toString(enc_utf8)\r\n  //       }\r\n  //     }\r\n  //   });\r\n  //   setFiltredDialogs([...newDialogsArr]);\r\n  // }, [dialogs]);\r\n\r\n  const onChangeInput = e => {\r\n    setFiltredDialogs(\r\n      dialogs.filter(\r\n        dialog => dialog.partner.login.toLowerCase().indexOf(e.target.value.toLowerCase()) >= 0\r\n      )    \r\n    );\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const isMe = userId => {\r\n    return myId === userId;\r\n  }\r\n\r\n  const setCurrentDialog = (id, partnerName, avatarColor, isOnline, secretKey) => {\r\n    console.log(secretKey);\r\n    dispatch({type: 'dialog/currentDialogId', payload: id});\r\n    dispatch({type: 'dialog/currentDialogData', payload: {partnerName, avatarColor, isOnline, secretKey}});\r\n  }\r\n\r\n  const getMessageTime = createdAt => {\r\n    if (isToday(createdAt)) {\r\n      return format(createdAt, 'HH:mm');\r\n    } else {\r\n      return format(createdAt, 'dd.MM.yyyy');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (dialogs) {\r\n      setFiltredDialogs([...dialogs]);\r\n    }\r\n  }, [dialogs]);\r\n  // const selectedDialogId = '606de52bab0b9f26980bb93e';\r\n  return (\r\n    <div className={classes.mainDiv}>\r\n      <div className={classes.div}>\r\n        <div className={classes.search}>\r\n          <InputBase \r\n            className={classes.searchInput}\r\n            type=\"search\"\r\n            placeholder=\"Search Diologs...\"\r\n            value={inputValue}\r\n            onChange={onChangeInput}\r\n          />\r\n          \r\n          <div className={classes.seacrhIcon}>\r\n            <SearchIcon />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Divider />\r\n\r\n      {loading ? <div className={classes.loader}><Loader /></div> : \r\n  \r\n      filtredDialogs.length ? \r\n        <List className={classes.root}>\r\n          {orderBy(filtredDialogs, ['updatedAt'], ['desc']).map(dialog => (\r\n            <React.Fragment key={dialog.id}>\r\n              <Link onClick={() => {\r\n                  socket.emit('DIALOGS:JOIN', {dialogId: dialog.id});\r\n                  setCurrentDialog(dialog.id, dialog.partner.login, dialog.partner.avatarColor, dialog.partner.isOnline, dialog.secretKey)\r\n                }} \r\n                to={`/dialogs/${dialog.id}`}>\r\n                <ListItem className={dialog.id === selectedDialogId ? classes['listItem--selected'] : classes.listItem} alignItems=\"flex-start\">\r\n                  <ListItemAvatar>                       \r\n                    <StyledBadge\r\n                      overlap=\"circle\"\r\n                      anchorOrigin={{\r\n                        vertical: 'bottom',\r\n                        horizontal: 'right',\r\n                      }}\r\n                      variant=\"dot\"\r\n                      className={classes.badgeOnlineColor}\r\n                      invisible={!dialog.partner.isOnline}\r\n                    >\r\n                      <Avatar style={{backgroundColor: `${dialog.partner.avatarColor}`}}>\r\n                        {dialog.partner.login.toUpperCase().slice(0, 1)}\r\n                      </Avatar>\r\n                    </StyledBadge>                     \r\n                  </ListItemAvatar>\r\n\r\n                  <ListItemText\r\n                    primary={\r\n                      (\r\n                        <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                          <Typography component=\"span\" color=\"textPrimary\">{dialog.partner.login}</Typography>\r\n\r\n                          <Typography\r\n                            component=\"span\" \r\n                            color=\"textPrimary\" \r\n                            variant=\"body2\"\r\n                            style={{margin: '3px 0'}}\r\n                          >\r\n                            {getMessageTime(parseISO(dialog.lastMessage.createdAt))}\r\n                          </Typography>\r\n                        </div>\r\n                      )\r\n                    }\r\n                    secondary={\r\n                      <Typography\r\n                        component=\"span\"\r\n                        variant=\"body2\"\r\n                        className={classes.inline}\r\n                        color=\"textPrimary\"\r\n                      >\r\n                        {\r\n                          isMe(dialog.lastMessage.user) && dialog.lastMessage.text.length > 16 && `You: ${dialog.lastMessage.text.split('').slice(0, 16).join('')}...`\r\n                        }\r\n\r\n                        {\r\n                          isMe(dialog.lastMessage.user) && dialog.lastMessage.text.length <= 16 && `You: ${dialog.lastMessage.text}`\r\n                        }\r\n\r\n                        {\r\n                          !isMe(dialog.lastMessage.user) && dialog.lastMessage.text.length > 19 && `${dialog.lastMessage.text.split('').slice(0, 19).join('')}...` \r\n                        }\r\n\r\n                        {\r\n                          !isMe(dialog.lastMessage.user) && dialog.lastMessage.text.length <= 19 && dialog.lastMessage.text\r\n                        }\r\n                      </Typography> \r\n                    }\r\n                  />\r\n                </ListItem>\r\n              </Link>\r\n              \r\n              <Divider component=\"li\" />\r\n            </React.Fragment>\r\n          ))}\r\n        </List> \r\n\r\n        : \r\n\r\n        <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'space-around', alignItems: 'center', height: 'calc(100vh - 285px)'}}>\r\n          <Typography variant=\"h6\">Nothing hasn't found!</Typography>\r\n\r\n          {whatTheme ? <img src={sadDarkSvg} alt=\"sad face\" /> : <img src={sadLightSvg} alt=\"sad face\" />}\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\SwitchTheme\\SwitchTheme.js",[],"C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\Status\\Status.js",[],"C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\containers\\Dialog\\Dialog.js",["130","131"],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHttp } from '../../hooks/useHttp';\r\n\r\nimport {io} from 'socket.io-client';\r\n\r\nimport AES from 'crypto-js/aes';\r\n\r\nimport 'emoji-mart/css/emoji-mart.css';\r\nimport { Picker } from 'emoji-mart';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\r\nimport { makeStyles, fade } from '@material-ui/core/styles';\r\nimport { Status } from '../../components/Status/Status';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Messages } from '../Messages/Messages';\r\nimport { ClickAwayListener, Typography } from '@material-ui/core';\r\nimport Dropzone from 'react-dropzone';\r\n \r\nconst dark = state => state.theme.dark;\r\nconst dialogData = state => state.dialog.currentDialogData;\r\nconst userData = state => state.auth.userData;\r\n\r\nconst socket = io();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  div: {\r\n    padding: '15px 10px'\r\n  },\r\n\r\n  text: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.defaultColorReverse.main, 0.15),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n  },\r\n  textInput: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(1, 0, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(6)}px)`,\r\n    paddingRight: `calc(1em + ${theme.spacing(12)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    position: 'relative',\r\n    [theme.breakpoints.down('sm')]: {\r\n      fontSize: '12px'\r\n    },\r\n  },\r\n\r\n  icon: {\r\n    height: '100%',\r\n    position: 'absolute',\r\n    top: 0,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n\r\n  emojiIcon: {\r\n    left: '5px'\r\n  },\r\n\r\n  emojiPicker: {\r\n    position: 'absolute',\r\n    bottom: '4rem',\r\n    '& .emoji-mart-scroll::-webkit-scrollbar': {\r\n      width: '0.25rem'\r\n    },\r\n\r\n    '& .emoji-mart-scroll::-webkit-scrollbar-track': {\r\n      backgroundColor: theme.palette.paperColor.main\r\n    },\r\n\r\n    '& .emoji-mart-scroll::-webkit-scrollbar-thumb': {\r\n      backgroundColor: theme.palette.primary.main\r\n    },\r\n\r\n    '& .emoji-mart-anchor-selected': {\r\n      color: `${theme.palette.primary.main} !important`,\r\n\r\n      '& .emoji-mart-anchor-bar': {\r\n        backgroundColor: `${theme.palette.primary.main} !important`\r\n      }\r\n    },\r\n    '& .emoji-mart': {\r\n      maxWidth: '355px',\r\n      width: 'auto !important'\r\n    }\r\n  },\r\n\r\n  sendIcon: {\r\n    right: '5px'\r\n  },\r\n\r\n  attachmentIcon: {\r\n    right: '55px'\r\n  },\r\n\r\n  dialogAttachment: {\r\n    '& .MuiDialogContent': {\r\n      overflow: 'hidden'\r\n    }\r\n    // overflow: 'hidden'\r\n  }\r\n}));\r\nexport const Dialog = ({ dialogId, addMessage }) => {\r\n  const classes = useStyles();\r\n  const { request } = useHttp();\r\n  const [showEmoji, setShowEmoji] = useState(false);\r\n  const [value, setValue] = useState('');\r\n  const [isAttachOpen, setIsAttachOpen] = useState(false);\r\n\r\n  const whatTheme = useSelector(dark);\r\n  const {partnerName, isOnline, secretKey} = useSelector(dialogData);\r\n  const {userName, id} = useSelector(userData);\r\n\r\n  const addEmoji = ({ native }) => {\r\n    setValue((`${value}${native}`).trim());\r\n  }\r\n\r\n  const addFiles = (file) => {\r\n    const selectedFile = file[0];\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(selectedFile);\r\n    reader.onloadend = async () => {\r\n      const data = await request('/api/upload/uploadFile', 'POST', {userId: id, file: reader.result});\r\n      socket.emit('NEW_MESSAGE', { text: value, dialogId, user: id, attachments: [data.image] });\r\n    }\r\n  }\r\n\r\n  const sendMessage = async () => {\r\n    const secureValue = AES.encrypt(value, secretKey).toString();\r\n    addMessage({ text: secureValue, dialogId, user: id });\r\n    // console.log(secureValue);\r\n    \r\n    socket.emit('NEW_MESSAGE', { text: secureValue, dialogId, user: id });\r\n\r\n    setValue('');\r\n    \r\n  }\r\n\r\n  return (\r\n    <Grid container direction=\"column\" justify=\"space-between\">\r\n      <div>\r\n        <Status dialogId={dialogId} partnerName={partnerName} userName={userName} isOnline={isOnline} />\r\n        <Divider />\r\n      </div>\r\n      {\r\n        dialogId ? \r\n        <>\r\n          <Messages dialogId={dialogId} partnerName={partnerName} userName={userName} />\r\n\r\n          <div className={classes.div}>\r\n            <div className={classes.text}>\r\n              <InputBase \r\n                className={classes.textInput}\r\n                type=\"text\"\r\n                placeholder=\"Put your message...\"\r\n                value={value}\r\n                onKeyUp={e => {\r\n                  socket.emit('DIALOGS:TYPING', {currentDialogId: dialogId, userId: id});\r\n                  if(e.code === 'Enter' && value !== '') {\r\n                    sendMessage();\r\n                  }\r\n                }}\r\n                onChange={e => setValue(e.target.value)}\r\n              >\r\n\r\n              </InputBase>\r\n\r\n              <IconButton className={`${classes.icon} ${classes.emojiIcon}`} onClick={() => setShowEmoji(!showEmoji)}>\r\n                <EmojiEmotionsIcon />\r\n              </IconButton>\r\n\r\n              { showEmoji && \r\n                <ClickAwayListener onClickAway={() => setShowEmoji(!showEmoji)}>\r\n                  <div className={classes.emojiPicker}>\r\n                    <Picker \r\n                      theme={whatTheme ? 'dark' : 'light'} \r\n                      showPreview={false} \r\n                      showSkinTones={false} \r\n                      onSelect={emojiTag => addEmoji(emojiTag)} \r\n                    />\r\n                  </div> \r\n                </ClickAwayListener>\r\n              }\r\n              \r\n              <IconButton className={`${classes.icon} ${classes.sendIcon}`} onClick={sendMessage}>\r\n                <SendIcon />\r\n              </IconButton>\r\n              \r\n              <IconButton className={`${classes.icon} ${classes.attachmentIcon}`} onClick={() => setIsAttachOpen(!isAttachOpen)}>\r\n                <AttachFileIcon />\r\n              </IconButton>\r\n              <Dropzone onDrop={files => addFiles(files)}>\r\n                {({getRootProps, getInputProps}) => (\r\n                  <section>\r\n                    <div {...getRootProps()}>\r\n                      <input {...getInputProps()} />\r\n                      <IconButton className={`${classes.icon} ${classes.attachmentIcon}`} onClick={() => setIsAttachOpen(!isAttachOpen)}>\r\n                        <AttachFileIcon />\r\n                      </IconButton>\r\n                    </div>\r\n                  </section>\r\n                )}\r\n              </Dropzone>\r\n            </div>\r\n          </div>   \r\n        </> :\r\n        <Typography variant=\"h3\">Please choose the dialog!</Typography>\r\n      }\r\n    </Grid>\r\n  );\r\n};","C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\Toast\\Toast.js",[],"C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\Message\\Message.js",[],"C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\containers\\Messages\\Messages.js",["132","133","134"],"C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\Settings\\Settings.js",[],"C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\CreateDiolog\\CreateDialog.js",[],"C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\Loader\\Loader.js",[],"C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\redux\\reducers\\dialogReducer.js",[],"C:\\Users\\admin\\Desktop\\IMPORTANT\\portfolio\\mernChat\\client\\src\\components\\DropZoneDialog\\DropZoneDialog.js",["135"],"import React from 'react';\r\nimport { DropzoneDialog } from 'material-ui-dropzone';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport const DropZoneDialog = ({isOpen}) => {\r\n  return (\r\n    <div>\r\n      <DropzoneDialog\r\n        open={isOpen}\r\n        // onSave={this.handleSave.bind(this)}\r\n        acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\r\n        showPreviews={false}\r\n        maxFileSize={5000000}\r\n        onClose={!isOpen}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n",["136","137"],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":13,"column":8,"nodeType":"144","messageId":"145","endLine":13,"endColumn":16},{"ruleId":"142","severity":1,"message":"146","line":107,"column":10,"nodeType":"144","messageId":"145","endLine":107,"endColumn":18},{"ruleId":"142","severity":1,"message":"147","line":127,"column":9,"nodeType":"144","messageId":"145","endLine":127,"endColumn":24},{"ruleId":"138","replacedBy":"148"},{"ruleId":"140","replacedBy":"149"},{"ruleId":"142","severity":1,"message":"150","line":9,"column":8,"nodeType":"144","messageId":"145","endLine":9,"endColumn":11},{"ruleId":"142","severity":1,"message":"151","line":10,"column":8,"nodeType":"144","messageId":"145","endLine":10,"endColumn":16},{"ruleId":"142","severity":1,"message":"152","line":1,"column":27,"nodeType":"144","messageId":"145","endLine":1,"endColumn":36},{"ruleId":"142","severity":1,"message":"153","line":1,"column":38,"nodeType":"144","messageId":"145","endLine":1,"endColumn":49},{"ruleId":"142","severity":1,"message":"154","line":6,"column":8,"nodeType":"144","messageId":"145","endLine":6,"endColumn":22},{"ruleId":"142","severity":1,"message":"155","line":66,"column":10,"nodeType":"144","messageId":"145","endLine":66,"endColumn":17},{"ruleId":"156","severity":1,"message":"157","line":93,"column":6,"nodeType":"158","endLine":93,"endColumn":36,"suggestions":"159"},{"ruleId":"142","severity":1,"message":"160","line":3,"column":8,"nodeType":"144","messageId":"145","endLine":3,"endColumn":14},{"ruleId":"138","replacedBy":"161"},{"ruleId":"140","replacedBy":"162"},"no-native-reassign",["163"],"no-negated-in-lhs",["164"],"no-unused-vars","'MenuIcon' is defined but never used.","Identifier","unusedVar","'anchorEl' is assigned a value but never used.","'handleMenuClose' is assigned a value but never used.",["163"],["164"],"'AES' is defined but never used.","'enc_utf8' is defined but never used.","'useEffect' is defined but never used.","'useCallback' is defined but never used.","'InfiniteScroll' is defined but never used.","'hasMore' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'page'. Either include it or remove the dependency array. You can also do a functional update 'setPage(p => ...)' if you only need 'page' in the 'setPage' call.","ArrayExpression",["165"],"'Button' is defined but never used.",["163"],["164"],"no-global-assign","no-unsafe-negation",{"desc":"166","fix":"167"},"Update the dependencies array to be: [dialogId, page, request, secretKey]",{"range":"168","text":"169"},[2665,2695],"[dialogId, page, request, secretKey]"]